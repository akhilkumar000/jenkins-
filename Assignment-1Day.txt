PseudoCode for bubble sort
START procedure bubbleSort(A : list of items)
    n = check length of (A)
    repeat
        initialize swapped = false
        for i = 1 to n-1 inclusive do
            if A[i] > A[i+1] then
                swap(A[i], A[i+1])
                swapped = true
            end if
        end for
    until not swapped
END procedure

Explanation Bubble Sort works by repeatedly stepping through the list of items to be sorted, comparing each pair of adjacent items and swapping them if they are in the wrong order. The pass through the list is repeated until no swaps are needed, which indicates that the list is sorted.



Demonsatration 

Let's say we have an array: [5, 3, 8, 2, 1]

Pass 1:
Compare 5 and 3, swap them: [3, 5, 8, 2, 1]
Compare 5 and 8, no swap needed.
Compare 8 and 2, swap them: [3, 5, 2, 8, 1]
Compare 8 and 1, swap them: [3, 5, 2, 1, 8]
Array after pass 1: [3, 5, 2, 1, 8]
Pass 2:
Compare 3 and 5, no swap needed.
Compare 5 and 2, swap them: [3, 2, 5, 1, 8]
Compare 5 and 1, swap them: [3, 2, 1, 5, 8]
Compare 5 and 8, no swap needed.
Array after pass 2: [3, 2, 1, 5, 8]
Pass 3:
Compare 3 and 2, swap them: [2, 3, 1, 5, 8]
Compare 3 and 1, swap them: [2, 1, 3, 5, 8]
Compare 3 and 5, no swap needed.
Array after pass 3: [2, 1, 3, 5, 8]
Pass 4:
Compare 2 and 1, swap them: [1, 2, 3, 5, 8]
Compare 2 and 3, no swap needed.
Compare 3 and 5, no swap needed.
Array after pass 4: [1, 2, 3, 5, 8]

